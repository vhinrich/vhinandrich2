<?php

function vhinandrich_blocks_block_info(){
  $blocks['vr_header_video'] = array(
    'info' => t('Vhin and Rich Header Video'),
    // 'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['vr_header'] = array(
    'info' => t('Vhin and Rich Header'),
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['vr_footer'] = array(
    'info' => t('Vhin and Rich Footer'),
  );
  $blocks['vr_map'] = array(
    'info' => t('Vhin and Rich Map'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function vhinandrich_blocks_block_view($delta){
  $function = __FUNCTION__ . '_' . $delta;
  if(function_exists($function)){
    return $function();
  }
}

function vhinandrich_blocks_block_view_vr_map(){
  $map_div = '<div style="overflow:hidden;height:500px;width:100%;"><div id="gmap_canvas" style="height:500px;width:100%;"></div></div>';

  // Default location (Verde View Singapore)
  $lat = 1.3917592;
  $lng = 103.75239529999999;

  // check if page is a node and get the node object
  if($node = menu_get_object()){
    if($node->type=='article'){
      if(isset($node->field_location) && isset($node->field_location[$node->language]) && count($node->field_location[$node->language])>0){
        $lat = $node->field_location[$node->language][0]['lat'];
        $lng = $node->field_location[$node->language][0]['lng'];
      }else{
        // return nothing if location is empty
        return FALSE;
      }
    }
  }

  drupal_add_js(array('vhinandrich_blocks' => array('map' => array('location' => array('lat' => $lat, 'lng' => $lng)))), 'setting');
  $block['content'] = array(
    '#markup' => $map_div,
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'vhinandrich_blocks') . '/css/vhinandrich_blocks_map.css'
      ),
      'js' => array(
        'http://maps.google.com/maps/api/js?sensor=false',
        drupal_get_path('module', 'vhinandrich_blocks') . '/js/vhinandrich_blocks_map.js'
      )
    )
  );
  return $block;
}

function vhinandrich_blocks_block_view_vr_footer(){
  $block['content'] = t('Copyright Â© 2012-@year <strong>VHIN + RICH</strong>. All rights reserved.', array('@year' => date('Y', time())));
  return $block;
}

function vhinandrich_blocks_block_view_vr_header(){
  $enter_site = NULL;
  $subtitle = NULL;
  if(drupal_is_front_page()){
    $enter_site = '<div><a href="#navbar">Enter site</a></div>';
  }else{
    $subtitle = drupal_get_title();
    if(arg(0)=='taxonomy' && arg(1)=='term' && is_numeric(arg(2))){
      $tid = arg(2);
      $taxonomy = taxonomy_term_load($tid);
      if($taxonomy->vocabulary_machine_name=='hastags'){
        $subtitle = '#' . $subtitle;
      }
    }
    $subtitle = truncate_utf8($subtitle, 13, FALSE, TRUE);
  }
  $args = array(
    'title' => 'VHIN <span class="highlight">+</span> RICH',
    'subtitle' => $subtitle,
    'caption' => '<p>Mark Quirvien and Richelle Rivamonte Cristobal</p>' . $enter_site
  );
  $block['content'] = theme('vhinrich_header', $args);
  return $block;
}

function vhinandrich_blocks_block_view_vr_header_video(){
  if(module_exists('videojs')){
    // $items = array(array('uri' => 'public://vhinandrich.mp4', 'filemime' => 'video/mp4'));
    $items = array(array('uri' => 'public://vhinandrich_lr.mp4', 'filemime' => 'video/mp4'));
    if(!drupal_is_front_page()){
      $items = array(array('uri' => 'public://vhinandrich_lr.mp4', 'filemime' => 'video/mp4'));
    }
    $poster_uri = 'public://52_52.jpg';
    $items[] = array('uri' => $poster_uri, 'filemime' => 'image/jpeg');
    $args = array(
      'player_id' => 'vr-header',
      'items' => $items,
      'attributes' => array('width' => '480','height' => '320'),
      'autoplay' => TRUE,
      'data_setup' => NULL,
      'poster_url' => file_create_url($poster_uri),
    );
    if(!drupal_is_front_page()){
      $args['poster_only'] = TRUE;
    }
    $block['content']['#markup'] = theme('vhinrich_videoheader', $args);
    $block['content']['#attached']['js'][] = drupal_get_path('module', 'vhinandrich_blocks') . '/js/vhinandrich_blocks_header_video.js';
    drupal_add_js(array('vhinandrich_blocks' => array('header_video' => $args)), 'setting');
  }else{
    $block['content']['#markup'] = '<div class="alert error">Video JS module must be installed.</div>';
  }
  return $block;
}

function vhinandrich_blocks_theme(){
  $themes['vhinrich_videoheader'] = array(
    'variables' => array('items' => NULL, 'player_id' => NULL, 'attributes' => NULL, 'entity' => NULL, 'entity_type' => NULL, 'posterimage_style' => NULL),
    'template' => 'themes/vhinrich-videoheader',
  );
  $themes['vhinrich_header'] = array(
    'variables' => array('title' => NULL, 'caption' => NULL),
    'template' => 'themes/vhinrich-header',
  );
  return $themes;
}

function vhinandrich_blocks_preprocess_vhinrich_videoheader(&$vars){
  if(module_exists('videojs')){
    videojs_add();

    $items = $vars['items'];
    $codecs = array(
      'video/mp4' => 'video/mp4',
      'video/x-m4v' => 'video/mp4',
      'video/webm' => 'video/webm',
      'application/octet-stream' => 'video/webm',
      'video/ogg' => 'video/ogg',
      'application/ogg' => 'video/ogg',
      'video/quicktime' => 'video/mp4',
      'video/flv' => 'video/flv',
      'video/x-flv' => 'video/flv',
      'audio/mpeg' => 'audio/mpeg',
      'audio/ogg' => 'audio/ogg',
      'application/vnd.apple.mpegurl' => 'application/vnd.apple.mpegurl', // .m3u8
    );

    $vars['width'] = !empty($vars['attributes']['width']) ? $vars['attributes']['width'] : variable_get('videojs_width', 640);
    $vars['height'] = !empty($vars['attributes']['height']) ? $vars['attributes']['height'] : variable_get('videojs_height', 360);
    $vars['autoplay'] = !!variable_get('videojs_autoplay', FALSE);
    $vars['items'] = array();
    $vars['poster'] = NULL;

    foreach ($items as $item) {
      if (empty($item['filemime'])) {
        continue;
      }

      if (!isset($codecs[$item['filemime']])) {
        // check for image file and add in it as poster
        if (strncmp($item['filemime'], 'image/', 6) === 0) {
          $vars['poster'] = $item['uri'];
        }

        // Skip unplayable items.
        continue;
      }

      $item['videotype'] = $codecs[$item['filemime']];

      $vars['items'][] = $item;
    }

    // Turn the poster image URI into a URL
    if (!empty($vars['poster'])) {
      if (empty($vars['posterimage_style'])) {
        $vars['poster'] = file_create_url($vars['poster']);
      }
      else {
        $vars['poster'] = image_style_url($vars['posterimage_style'], $vars['poster']);
      }
    }
  }

  if(!isset($vars['poster_only']) || !$vars['poster_only']){
    $vars['autoplay'] = TRUE;
  }else{
    unset($vars['autoplay']);
  }
}
