<?php

define('SOCIAL_BUTTONS_DISABLED', 0);
define('SOCIAL_BUTTONS_ENABLED', 1);

/**
 * Implements hook_menu().
 */
function social_buttons_menu(){  
  $items = array();
  return $items;
}

function social_buttons_form_node_form_alter(&$form, $form_state){
  
}

function social_buttons_form_node_type_form_alter(&$form, &$form_state) {
  $default_value = social_buttons_get_setting($form['#node_type']->type);
  $form['social_buttons'] = array(
    '#type' => 'fieldset',
    '#group' => 'additional_settings',
    '#title' => t('Social buttons'),
  );
  $form['social_buttons']['display_social_buttons'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display social buttons'),
    '#default_value' => $default_value,
  );
  $form['#submit'][] = 'social_buttons_form_submit';
}

function social_buttons_form_submit($form, $form_state){
  variable_set('sb_' . $form_state['values']['type'], $form_state['values']['display_social_buttons']);
}

/**
 * Gets the auto node title setting associated with the given content type.
 */
function social_buttons_get_setting($type) {
  return variable_get('sb_' . $type, SOCIAL_BUTTONS_DISABLED);
}

function social_buttons_node_type_update($info) {
  if (!empty($info->old_type) && $info->old_type != $info->type) {
    variable_set('sb_' . $info->type, social_buttons_get_setting($info->old_type));
    variable_del('sb_' . $info->old_type);
  }else{
    variable_set('sb_' . $info->type, social_buttons_get_setting($info->type));
  }
}

function social_buttons_node_type_delete($info){
  variable_del('sb_' . $info->type);
}

function social_buttons_node_type_insert($info){
  variable_set('sb_' . $info->type, social_buttons_get_setting($info->old_type));
}

function social_buttons_node_view($node, $view_mode, $langcode){
  $show_social = social_buttons_get_setting($node->type);
  if($show_social){
    $node->content['social_buttons'] = array(
      '#theme' => 'field',
      '#view_mode' => $view_mode,
      '#field_name' => 'social_buttons',
      '#weight' => 0,
      '#title' => 'social buttons',
      '#label_display' => 'hidden',
      '#field_type' => 'textfield',
      '#bundle' => $node->type,
    );
    $icons = array('facebook', 'twitter', 'google-plus', 'pinterest');
    foreach($icons as $key => $icon){
      $node->content['social_buttons']['#items'][] = array('value' => $icon);
      $node->content['social_buttons'][] = array(
        '#theme' => 'field',
        '#view_mode' => $view_mode,
        '#field_name' => 'social_button',
        '#weight' => 0,
        '#title' => 'social buttons',
        '#label_display' => 'hidden',
        '#field_type' => 'textfield',
        '#bundle' => $node->type,
        '#items' => array(array('value' => $icon)),
        array('name' => $icon, '#markup' => $icon)
      );
    }
  }
}

function social_buttons_render_button($icon){
  $classes = implode(' ', $icon['classes_array']);
  return '<div class="social-button ' . $classes . '">' . $icon['value'] . '</div>';
}