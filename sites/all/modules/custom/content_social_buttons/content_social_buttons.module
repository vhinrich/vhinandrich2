<?php

define('CONTENT_SOCIAL_BUTTONS_DISABLED', 0);
define('CONTENT_SOCIAL_BUTTONS_ENABLED', 1);

/**
 * Implements hook_menu().
 */
function content_social_buttons_menu(){  
  $items = array();
  return $items;
}

function content_social_buttons_form_node_form_alter(&$form, $form_state){
  
}

function content_social_buttons_icons(){
  return array('facebook-like', 'facebook', 'twitter', 'google-plus', 'pinterest');
}

function content_social_buttons_form_node_type_form_alter(&$form, &$form_state) {
  $type = $form['#node_type']->type;
  $default_value = content_social_buttons_get_setting($type);
  $form['social_buttons'] = array(
    '#type' => 'fieldset',
    '#group' => 'additional_settings',
    '#title' => t('Social buttons'),
  );
  $form['social_buttons']['display_social_buttons'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display social buttons'),
    '#default_value' => $default_value,
  );
  
  $icons = content_social_buttons_icons();
  $form['social_buttons']['icons'] = array(
    '#type' => 'fieldset',
    '#title' => t('Icons'),
  );
  foreach($icons as $key => $icon){
    $icon_default_value = content_social_buttons_icon_get_setting($type, $icon);
    $disable_option = false;
    $disable_reason = '';
    if($icon=='pinterest'){
      //pinterest requires custom token
      if(!module_exists('token_custom')){
        $icon_default_value = 0;
        $disable_option = true;
        $disable_reason = t('Pinterest requires token and custom token module');
      }
    }
    $form['social_buttons']['icons']['social_buttons_icon_' . $icon] = array(
      '#type' => 'checkbox',
      '#title' => $icon,
      '#default_value' => $icon_default_value,
      '#disabled' => $disable_option,
      '#description' => $disable_reason ? $disable_reason : '',
    );
    if($icon=='pinterest' && !$disable_option){
      $form['social_buttons']['icons']['social_buttons_icon_token_' . $icon] = array(
        '#type' => 'textfield',
        '#title' => 'token for ' . $icon . ' photo',
        '#default_value' => content_social_buttons_icon_token_get_setting($type, $icon)
      );
    }
  }
  $form['#submit'][] = 'content_social_buttons_form_submit';
}

function content_social_buttons_form_submit($form, $form_state){
  variable_set('csb_' . $form_state['values']['type'], $form_state['values']['display_social_buttons']);
  $icons = content_social_buttons_icons();
  foreach($icons as $key => $icon){
    variable_set('csb_' . $form_state['values']['type'] . '_' . $icon, $form_state['values']['social_buttons_icon_' . $icon]);
    if(isset($form_state['values']['social_buttons_icon_token_' . $icon]))
      variable_set('csb_' . $form_state['values']['type'] . '_' . $icon . '_token', $form_state['values']['social_buttons_icon_token_' . $icon]);
  }
}

function content_social_buttons_preprocess_html(&$vars){
  //$vars['classes_array'][] = 'row-offcanvas';
  //$vars['classes_array'][] = 'row-offcanvas-right';
}

function content_social_buttons_preprocess_page(&$vars){
//  //social icons headers
//  
  $facebook_header = '<div id="fb-root"></div>';
  drupal_add_js('(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&status=0";
  fjs.parentNode.insertBefore(js, fjs);
}(document, \'script\', \'facebook-jssdk\'));','inline');
//
  $twitter_header = '';
//  drupal_add_js('!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?\'http\':\'https\';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+\'://platform.twitter.com/widgets.js\';fjs.parentNode.insertBefore(js,fjs);}}(document, \'script\', \'twitter-wjs\');', 'inline');
//  
  $google_plus_header = '';
//  drupal_add_js('(function() {
//    var po = document.createElement(\'script\'); po.type = \'text/javascript\'; po.async = true;
//    po.src = \'https://apis.google.com/js/platform.js\';
//    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(po, s);
//  })();', 'inline');
//
  $pinterest_header = '';
//  //'<script type="text/javascript" async src="//assets.pinterest.com/js/pinit.js"></script>';
//  //drupal_add_js('http://assets.pinterest.com/js/pinit.js', 'external');
//  drupal_add_js('(function() {
//    var po = document.createElement(\'script\'); po.type = \'text/javascript\'; po.async = true;
//    po.src = \'http://assets.pinterest.com/js/pinit.js\';
//    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(po, s);
//  })();' ,'inline');
//  
//  
//  
  $vars['page']['header']['social_buttons_headers'] = array(
    '#markup' => $facebook_header . $google_plus_header . $pinterest_header,
  );
//  
//  $vars['page']['content']['social_buttons_inlines'] = array(
//    '#markup' => $twitter_header,
//  );
//  
//  //$vars['page']['page_bottom']['social_buttons_footers'] = array(
//  //  '#markup' => $twitter_header,
//  //);
//  
//  //render block
//  $social_buttons = block_load('content_social_buttons', 'content_social_buttons');
//  $social_buttons = _block_get_renderable_array(_block_render_blocks(array($social_buttons)));
//  array_push($vars['page']['header'], $social_buttons);
}

/**
 * Gets the auto node title setting associated with the given content type.
 */
function content_social_buttons_get_setting($type) {
  return variable_get('csb_' . $type, CONTENT_SOCIAL_BUTTONS_DISABLED);
}

function content_social_buttons_icon_get_setting($type, $icon){
  return variable_get('csb_' . $type . '_' . $icon, CONTENT_SOCIAL_BUTTONS_ENABLED);
}

function content_social_buttons_icon_token_get_setting($type, $icon){
  return variable_get('csb_' . $type . '_' . $icon . '_token', '');
}

function content_social_buttons_node_type_update($info) {
  if (!empty($info->old_type) && $info->old_type != $info->type) {
    variable_set('csb_' . $info->type, content_social_buttons_get_setting($info->old_type));
    variable_del('csb_' . $info->old_type);
  }else{
    variable_set('csb_' . $info->type, content_social_buttons_get_setting($info->type));
  }
}

function content_social_buttons_node_type_delete($info){
  variable_del('csb_' . $info->type);
}

function content_social_buttons_node_type_insert($info){
  variable_set('csb_' . $info->type, content_social_buttons_get_setting($info->old_type));
}

function content_social_buttons_node_view($node, $view_mode, $langcode){
  $show_social = content_social_buttons_get_setting($node->type);
  if($show_social){
    $icons = content_social_buttons_icons(); //icons
    $node_url = url('node/' . $node->nid, array('absolute' => true));
    
    drupal_add_css(drupal_get_path('module', 'content_social_buttons') . '/css/content_social_buttons.css');
    drupal_add_js(drupal_get_path('module', 'content_social_buttons') . '/js/content_social_buttons.js');
    
    $node->content['content_social_buttons'] = array(
      '#theme' => 'field',
      '#view_mode' => $view_mode,
      '#field_name' => 'content_social_buttons',
      '#weight' => -1,
      '#title' => 'social buttons',
      '#label_display' => 'hidden',
      '#field_type' => 'textfield',
      '#bundle' => $node->type,
      '#node' => $node,
    );
    $node->content['content_social_buttons_js'] = array(
      '#theme' => 'field',
      '#view_mode' => $view_mode,
      '#field_name' => 'content_social_buttons_js',
      '#weight' => -1,
      '#title' => 'social buttons',
      '#label_display' => 'hidden',
      '#field_type' => 'textfield',
      '#bundle' => $node->type,
      '#node' => $node,
    );
    foreach($icons as $key => $icon){
      $show_icon = content_social_buttons_icon_get_setting($node->type, $icon);
      if($show_icon){
        if($icon=='facebook-like'){
          $node->content['content_social_buttons_js']['#items'][] = array('value' => $icon);
          $node->content['content_social_buttons_js'][] = array(
            '#theme' => 'field',
            '#view_mode' => $view_mode,
            '#field_name' => $icon,
            '#weight' => 0,
            '#title' => 'social buttons',
            '#label_display' => 'hidden',
            '#field_type' => 'textfield',
            '#bundle' => $node->type,
            '#items' => array(array('value' => $icon, 'url' => $node_url)),
            array('name' => $icon, '#markup' => content_social_buttons_generate_button($icon, $node_url, $node))
          );
        }else{
          $node->content['content_social_buttons']['#items'][] = array('value' => $icon);
          $node->content['content_social_buttons'][] = array(
            '#theme' => 'field',
            '#view_mode' => $view_mode,
            '#field_name' => $icon,
            '#weight' => 0,
            '#title' => 'social buttons',
            '#label_display' => 'hidden',
            '#field_type' => 'textfield',
            '#bundle' => $node->type,
            '#items' => array(array('value' => $icon, 'url' => $node_url)),
            array('name' => $icon, '#markup' => content_social_buttons_generate_button($icon, $node_url, $node))
          );
        }
      }
    }
    if(!isset($node->content['content_social_buttons_js']['#items']) || count($node->content['content_social_buttons_js']['#items']) <= 0){
      unset($node->content['content_social_buttons_js']);
    }
  }
}

function content_social_buttons_preprocess_field(&$vars){
  if($vars['element']['#field_name']=='content_social_buttons' || $vars['element']['#field_name']=='content_social_buttons_js'){
    $vars['attributes_array']['data-title'] = $vars['element']['#node']->title;
    $vars['classes_array'][] = 'clearfix';
  }
}

function content_social_buttons_generate_button($icon, $url, $node){
  $markup = '';
  $tmpBody  = '';
  if(isset($node->body[$node->language]) && isset($node->body[$node->language][0])){
    $tmpBody = truncate_utf8(strip_tags($node->body[$node->language][0]['value']), 120, true, true);
  }
  switch ($icon){
    case 'facebook-like':
      $markup = '<div class="fb-like" data-href="' . $url . '" data-layout="button_count" data-action="like" data-show-faces="false" data-share="false"></div>';
      break;
    case 'facebook':
      $markup = '<a href="https://www.facebook.com/sharer/sharer.php?u=' . $url . '&t=' . $tmpBody .'"><i class="fa fa-facebook fa-fw"></i></a>';
      break;
    case 'twitter':
      $markup = '<a href="https://twitter.com/intent/tweet?original_referer=' . $url . '&text=' . urlencode($tmpBody) . '&tw_p=tweetbutton&url=' . $url .'"><i class="fa fa-twitter fa-fw"></i></a>';
      break;
    case 'google-plus':
      $markup = '<a href="https://plus.google.com/share?url=' . $url . '"><i class="fa fa-google-plus fa-fw"></i></a>';
      break;
    case 'pinterest':
      $url = urlencode($url);
      $token = content_social_buttons_icon_token_get_setting($node->type, $icon);
      $media_url = urlencode(token_replace($token, array('node' => $node)));
      $description = urlencode($tmpBody);
      $markup = '<a href="//www.pinterest.com/pin/create/button/?url=' . $url . '&media=' . $media_url . '&description=' . $description . '" data-pin-do="buttonPin" data-pin-config="none"><i class="fa fa-pinterest fa-fw"></i></a>';
      break;
    default:
      $markup = $icon;
      break;
  }
  return $markup;
}

function content_social_buttons_block_info() {
  // This example comes from node.module.
  $blocks['content_social_buttons'] = array(
    'info' => t('Social Buttons'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function content_social_buttons_block_view($delta = '') {
  $block = array();


  switch ($delta) {
    case 'content_social_buttons':
      $block['content'] = '<div id="content-social-buttons-container" class="content-social-buttons-container sidebar-offcanvas"><div class="content-social-buttons-inner"><div class="content-social-buttons-wrapper"></div></div></div>';
      break;
  }
  
  return $block;
}

