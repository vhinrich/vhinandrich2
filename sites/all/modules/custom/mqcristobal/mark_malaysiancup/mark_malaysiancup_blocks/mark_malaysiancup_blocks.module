<?php

/*
 * Implements hook_theme().
 */
function mark_malaysiancup_blocks_theme() {
  $theme = array(
    'mmcb_main_js_calendar_menu_main' => array(
      'template' => 'templates/mmcb-main-js-calendar-menu-main', // define xxx-xxx.tpl.php inside module
      'arguments' => array(), //define $xxx so it will available in your xxx-xxx.tpl.php
    ),
    'mmcb_main_full_js_calendar_menu_main' => array(
      'template' => 'templates/mmcb-main-full-js-calendar-menu-main', // define xxx-xxx.tpl.php inside module
      'arguments' => array(), //define $xxx so it will available in your xxx-xxx.tpl.php
    ),
    'mmcb_main_full_js_calendar_menu_main_month' => array(
      'template' => 'templates/mmcb-main-full-js-calendar-menu-main-month', // define xxx-xxx.tpl.php inside module
      'arguments' => array(), //define $xxx so it will available in your xxx-xxx.tpl.php
    ),
    'mmcb_main_full_js_calendar_menu_main_day' => array(
      'template' => 'templates/mmcb-main-full-js-calendar-menu-main-day', // define xxx-xxx.tpl.php inside module
      'arguments' => array(), //define $xxx so it will available in your xxx-xxx.tpl.php
    ),
  );
  
  return $theme;
}

/**
 * Implements hook_block_info().
 */
function mark_malaysiancup_blocks_block_info() {
  $blocks = array();
  $blocks['mmcb_main_js_menu'] = array(
    'info' => t('Malaysian Cup Main JS Menu'),
  );
  $blocks['mmcb_main_simple_menu'] = array(
    'info' => t('Malaysian Cup Main Simple Menu'),
  );
  $blocks['mmcb_main_js_content'] = array(
    'info' => t('Malaysian Cup Main JS Content'),
  );
  $blocks['mmcb_main_social_buttons'] = array(
    'info' => t('Malaysian Cup Main Social Button'),
  );
  $blocks['mmcb_main_footer_display'] = array(
    'info' => t('Malaysian Cup Main Footer Display'),
  );
  $blocks['mmcb_main_header_sponsor'] = array(
    'info' => t('Malaysian Cup Main Header Sponsor'),
  );
  $blocks['mmcb_main_content_pager'] = array(
    'info' => t('Malaysian Cup Main Content Pager'),
  );
  $blocks['mmcb_main_content_preloader'] = array(
    'info' => t('Malaysian Cup Main Content Preloader'),
  );
  $blocks['mmcb_main_back_to_top'] = array(
    'info' => t('Malaysian Cup Main Content Back to Top'),
  );
  $blocks['mmcb_main_js_calendar_menu'] = array(
    'info' => t('Malaysian Cup Main Main JS Calendar Menu'),
  );
  $blocks['mmcb_main_full_js_calendar_menu'] = array(
    'info' => t('Malaysian Cup Main Main Full JS Calendar Menu'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mark_malaysiancup_blocks_block_view($delta='') {
  $block = array();
 
  switch($delta) {
    case 'mmcb_main_js_menu' :
      $block['content'] = _mmcb_main_js_menu();
      break;
    case 'mmcb_main_simple_menu' :
      $block['content'] = _mmcb_main_js_menu(false);
      break;
    case 'mmcb_main_js_content':
      $block['content'] = _mmcb_main_js_content();
      break;
    case 'mmcb_main_social_buttons':
      $block['content'] = _mmcb_main_social_button();
      break;
    case 'mmcb_main_footer_display':
      $block['content'] = _mmcb_main_footer_display();
      break;
    case 'mmcb_main_header_sponsor':
      $block['content'] = _mmcb_main_header_sponsor();
      break;
    case 'mmcb_main_content_pager':
      $block['content'] = _mmcb_main_content_pager();
      break;
    case 'mmcb_main_content_preloader':
      $block['content'] = _mmcb_main_content_preloader();
      break;
    case 'mmcb_main_back_to_top':
      $block['content'] = _mmcb_main_back_to_top();
      break;
    case 'mmcb_main_js_calendar_menu':
      $block['content'] = _mmcb_main_js_calendar_menu();
      break;
    case 'mmcb_main_full_js_calendar_menu':
      $block['content'] = _mmcb_main_full_js_calendar_menu();
      break;
  }
 
  return $block;
}

function _mmcb_main_full_js_calendar_menu(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  
  $date_timestamp = strtotime('now');
  $time_timestamp = strtotime('now');
  if(arg(0)=='node' && is_numeric(arg(1))){
    $dateTime = _mmcb_get_node_date_time(arg(1));
    $date_timestamp = $dateTime['field_date_time_value'];
    $time_timestamp = $dateTime['field_time_value'] - (60*60*7.5);
  }
  
  $dates = _mmcb_get_node_date_time_list();
  //$dateTimeString = _mmcb_get_node_date_time_list_for_zebra_dp();
  
  $args = array(
    'module_path' => $module_path,
    'date_timestamp' => $date_timestamp,
    'time_timestamp' => $time_timestamp,
    'dates' => $dates,
  );
  $content = theme('mmcb_main_full_js_calendar_menu_main', array('args' => $args));
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $content,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmcb_main_full_js_calendar_menu_main.js' => array (
            'type' => 'file',
          ),
        ),
        'css' => array(
          $module_path . '/css/mmcb_main_full_js_calendar_menu_main.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_get_node_date_time_query($nid = 0){
  $query = db_select('node', 'node');
  $query->join('taxonomy_index', 'taxonomy_index', 'taxonomy_index.nid=node.nid');
  $query->join('field_data_field_date_time', 'field_data_field_date_time', 'taxonomy_index.tid=field_data_field_date_time.entity_id');
  $query->join('field_revision_field_time', 'field_revision_field_time', 'taxonomy_index.nid=field_revision_field_time.entity_id');
  $query->join('field_data_field_timeline_title', 'field_data_field_timeline_title', 'node.nid=field_data_field_timeline_title.entity_id');
  $query->fields('field_revision_field_time', array('entity_id', 'field_time_value'))//SELECT the fields from field_revision_field_time
    ->fields('node', array('title', 'nid'))
    ->fields('field_data_field_date_time', array('field_date_time_value'))
    ->fields('field_data_field_timeline_title', array('field_timeline_title_value'))
    ->orderBy('field_data_field_date_time.field_date_time_value', 'ASC')//weight
    ->condition('node.status', '1')
    ->condition('field_revision_field_time.deleted', '0')
    ->condition('node.type', array('story', 'block_quote', 'video', 'live_blog', 'photo', 'infographic'),'IN');
  if($nid > 0){
    $query->condition('node.nid', $nid);
  }
  $dateTime = $query->execute();
  return $dateTime;
}
function _mmcb_get_node_date_time($nid = 0){
  $dateTime = _mmcb_get_node_date_time_query($nid);
  
  while($record = $dateTime->fetchAssoc()){
    return $record;
  }
  return null;
}
function _mmcb_get_node_date_time_list(){
  $dateTime = _mmcb_get_node_date_time_query();
  $dateTimeString = '';
  $days = array();
  $months = array();
  $years = array();
  $dates = array();
  $mainReturn = array();
  while($record = $dateTime->fetchAssoc()){
    $tmpDate = $record['field_date_time_value'];
    //$days[] = date('j', $tmpDate);
    //$months[] = date('n', $tmpDate);
    //$years[] = date('Y', $tmpDate);
    $dates[] = date('j n Y', $tmpDate);
    $mainReturn['dates'][date('Y-m-d', $tmpDate)][] = array(
      'nid' => $record['nid'],
      'data' => $record,
      'url' => url('node/' . $record['nid']),
    );
  }
  //$dateTimeString = "[" . implode(',', $dates) . "]";
  $dateTimeString = drupal_json_encode($dates);
  $mainReturn['zebra_dates'] = $dateTimeString;
  return $mainReturn;
}
function _mmcb_get_node_date_time_list_for_zebra_dp(){
  $dateTime = _mmcb_get_node_date_time_query();
  $dateTimeString = '';
  $days = array();
  $months = array();
  $years = array();
  $dates = array();
  $mainReturn = array();
  while($record = $dateTime->fetchAssoc()){
    $tmpDate = $record['field_date_time_value'];
    //$days[] = date('j', $tmpDate);
    //$months[] = date('n', $tmpDate);
    //$years[] = date('Y', $tmpDate);
    $dates[] = date('j n Y', $tmpDate);
    if(!isset($mainReturn['dates'][date('Y-m-d', $tmpDate)])){
      $mainReturn['dates'][date('Y-m-d', $tmpDate)] = array(
        'nid' => $record['nid'],
        'data' => $record,
        'url' => url('node/' . $record['nid']),
      );
    }
  }
  //$dateTimeString = "[" . implode(',', $dates) . "]";
  $dateTimeString = drupal_json_encode($dates);
  $mainReturn['zebra_dates'] = $dateTimeString;
  return $mainReturn;
}
function _mmcb_main_js_calendar_menu(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  
  $date_timestamp = strtotime('now');
  $time_timestamp = strtotime('now');
  if(arg(0)=='node' && is_numeric(arg(1))){
    $dateTime = _mmcb_get_node_date_time(arg(1));
    $date_timestamp = $dateTime['field_date_time_value'];
    $time_timestamp = $dateTime['field_time_value'] - (60*60*7.5);
  }
  
  $dates = _mmcb_get_node_date_time_list_for_zebra_dp();
  //$dateTimeString = _mmcb_get_node_date_time_list_for_zebra_dp();
  
  $args = array(
    'module_path' => $module_path,
    'date_timestamp' => $date_timestamp,
    'time_timestamp' => $time_timestamp,
  );
  $content = theme('mmcb_main_js_calendar_menu_main', array('args' => $args));
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $content,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmcb_main_js_calendar_menu_main.js' => array (
            'type' => 'file',
          ),
          $module_path . '/js/Zebra_Datepicker/public/javascript/zebra_datepicker.js' => array (
            'type' => 'file',
          ),
          array(
            'data' => array(
              'mmcb_main_js_calendar_menu' => array(
                'dates' => $dates,
              ),
            ),
            'type' => 'setting',
          ),
        ),
        'css' => array(
          $module_path . '/css/mmcb_main_js_calendar_menu_main.css',
          $module_path . '/js/Zebra_Datepicker/public/css/bootstrap.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_back_to_top(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  $backToTop = '<div class="mmc-block-content-backtotop"><div class="mmc-block-content-backtotop-container"><a class="button" href="#">BACK TO TOP</a></div></div>';
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $backToTop,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmc_main_content_backtotop.js' => array (
            'type' => 'file',
          ),
        ),
        'css' => array(
          $module_path . '/css/mmc_main_content_backtotop.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_content_preloader(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  $preloader = '<div class="mmc-block-content-preloader"><div class="mmc-block-content-preloader-container"><div class="title">Malaysia Cup Diaries</div></div></div>';
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $preloader,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmc_main_content_preloader.js' => array (
            'type' => 'file',
          ),
        ),
        'css' => array(
          $module_path . '/css/mmc_main_content_preloader.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_content_pager(){
  $query = db_select('taxonomy_index', 'taxonomy_index');
  $query->distinct(true);
  $query->join('field_data_field_date_time', 'field_data_field_date_time', 'taxonomy_index.tid=field_data_field_date_time.entity_id');
  $query->join('taxonomy_term_data', 'taxonomy_term_data', 'taxonomy_index.tid=taxonomy_term_data.tid');
  $query->join('field_revision_field_time', 'field_revision_field_time', 'taxonomy_index.nid=field_revision_field_time.entity_id');
  $query->join('node', 'node', 'taxonomy_index.nid=node.nid');
  $query->join('field_data_field_timeline_title', 'field_data_field_timeline_title', 'node.nid=field_data_field_timeline_title.entity_id');
  $times = $query->fields('field_revision_field_time', array('entity_id', 'field_time_value'))//SELECT the fields from field_revision_field_time
    ->fields('node', array('title', 'nid'))
    ->fields('field_data_field_timeline_title', array('field_timeline_title_value'))
    ->orderBy('field_data_field_date_time.field_date_time_value', 'ASC')//weight
    ->orderBy('taxonomy_term_data.tid', 'ASC')//weight
    ->orderBy('field_time_value', 'ASC')//ORDER BY created
    ->condition('node.status', '1')
    ->condition('field_revision_field_time.deleted', '0')
    ->execute();
  
  $nid = 0;
  if(arg(0)=='node'){
    $nid = arg(1);
  }
  $pager_list = array();
  $tmp_pager_nodes = array();
  while($record = $times->fetchAssoc()){
    $tmp_pager_nodes[] = $record;
  }
  if(sizeof($tmp_pager_nodes) > 0){
    $first_element = reset($tmp_pager_nodes);
    $last_element = end($tmp_pager_nodes);
    if($first_element['nid']==$nid){
      if(sizeof($tmp_pager_nodes)>1){
        $next_element = $tmp_pager_nodes[1];
        $pager_list[] = array(
          'data' => '',
          'id' => 'main-content-pager-prev',
          'class' => array('main-content-pager','main-content-pager-prev'),
        );
        $pager_list[] = array(
          //'data' => '<a href="' . url('node/'. $next_element['nid'], array('absolute'=>true)). '"><span class="icon">&nbsp;</span></a>',
          'data' => '<a href="' . url('node/'. $next_element['nid']) . '"><span class="icon">&nbsp;</span></a>',
          'id' => 'main-content-pager-next',
          'class' => array('main-content-pager','main-content-pager-next'),
        );
      }
    }elseif($last_element['nid']==$nid || $nid==0){
      if(sizeof($tmp_pager_nodes) > 2){
        $prev_element = $tmp_pager_nodes[sizeof($tmp_pager_nodes)-2];
        $pager_list[] = array(
          //'data' => '<a href="' . url('node/'. $prev_element['nid'], array('absolute'=>true)). '"><span class="icon">&nbsp;</span></a>',
          'data' => '<a href="' . url('node/'. $prev_element['nid']) . '"><span class="icon">&nbsp;</span></a>',
          'id' => 'main-content-pager-prev',
          'class' => array('main-content-pager','main-content-pager-prev'),
        );
        $pager_list[] = array(
          'data' => '',
          'id' => 'main-content-pager-next',
          'class' => array('main-content-pager','main-content-pager-next'),
        );
      }
    }else{
      foreach($tmp_pager_nodes as $key => $item){
        if($item['nid']==$nid){
          $next_element = $tmp_pager_nodes[$key+1];
          $prev_element = $tmp_pager_nodes[$key-1];
          $pager_list[] = array(
            //'data' => '<a href="' . url('node/'. $prev_element['nid'], array('absolute'=>true)). '"><span class="icon">&nbsp;</span></a>',
            'data' => '<a href="' . url('node/'. $prev_element['nid']). '"><span class="icon">&nbsp;</span></a>',
            'id' => 'main-content-pager-prev',
            'class' => array('main-content-pager','main-content-pager-prev'),
          );
          $pager_list[] = array(
            //'data' => '<a href="' . url('node/'. $next_element['nid'], array('absolute'=>true)). '"><span class="icon">&nbsp;</span></a>',
            'data' => '<a href="' . url('node/'. $next_element['nid']). '"><span class="icon">&nbsp;</span></a>',
            'id' => 'main-content-pager-next',
            'class' => array('main-content-pager','main-content-pager-next'),
          );
          break;
        }
      }
    }
    $attribs = array(
      'class' => array('main-content-pager'),
      'data-stellar-ratio' => '0.6',
      'data-stellar-vertical-offset' => '600'
    );
    return theme_item_list(array('items' => $pager_list, 'title' => '', 'type' => 'ul', 'attributes' => $attribs));
  }
}

function _mmcb_main_content_pager(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  $pager = '<div class="mmc-block-content-pager">' . _mmcb_content_pager() . '</div>';
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $pager,
      '#attached' => array(
        'css' => array(
          $module_path . '/css/mmc_main_content_pager.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_header_sponsor(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  $url = url($module_path, array('absolute' => true));
  $header_sponsor = '<div class="mmc-block-header-sponsor clearfix"><div class="sponsor-header">brought to you by</span><div><img src="' . $url . '/css/images/todayonlinefooterlogo.png" /></div></div>';
  
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $header_sponsor,
      '#attached' => array(
        'css' => array(
          $module_path . '/css/mmc_main_header_sponsor.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_footer_display(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  
  $mfc_text_feed_block = module_invoke('mark_feedclient', 'block_view', 'mfc_text_feed');
  $mfc_text_feed_block = render($mfc_text_feed_block);
  
  $footer_display = '<div class="mmc-block-footer-display clearfix"><div class="footer-display-logo"></div><div class="footer-display-message">' . $mfc_text_feed_block . '</div></div>';
  
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $footer_display,
      '#attached' => array(
        'css' => array(
          $module_path . '/css/mmc_main_footer_display.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_social_button(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  //$url = $GLOBALS['base_url'];
  $url = 'http://www.todayonline.com/malaysiacup';
  
  // Facebook+Twitter
  $social_buttons_list[] = array(
    'data' => '<div class="main-social-icons"><div class="fb icon"><div class="fb-like" data-href="' . $url . '" data-send="false" data-layout="button_count" data-width="100" data-show-faces="false"></div></div>
              <div class="twitter icon"><a href="https://twitter.com/share"
              class="twitter-share-button"
              data-size="small"
              data-count="horizontal"
              data-lang="en">Tweet</a>
              </div></div>',
    'class' => array('facebook-twitter')
  );
  
  //web
  $social_buttons_list[] = array(
    'data' => '<a target="_blank" href="http://www.todayonline.com/sports"><span class="icon">&nbsp;</span></a>',
    'id' => 'social-button-menu-web',
    'class' => array('social-button-menu-item'),
  );
  
  //facebook
  $social_buttons_list[] = array(
    'data' => '<a target="_blank" href="https://www.facebook.com/TODAYsports"><span class="icon">&nbsp;</span></a>',
    'id' => 'social-button-menu-fb',
    'class' => array('social-button-menu-item'),
  );
  
  //twitter
  $social_buttons_list[] = array(
    'data' => '<a target="_blank" href="https://twitter.com/tdysports"><span class="icon">&nbsp;</span></a>',
    'id' => 'social-button-menu-twitter',
    'class' => array('social-button-menu-item'),
  );
  
  $social_buttons = theme_item_list(array('items' => $social_buttons_list, 'title' => '', 'type' => 'ul', 'attributes' => array('class' => array('social-buttons-menu'))));
  $social_buttons = '<div class="mmc-block-social-buttons clearfix">' . $social_buttons . '</div>';
  
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $social_buttons,
      '#attached' => array(
        'css' => array(
          $module_path . '/css/mmc_main_social_button.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_main_js_content(){
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  
  //$taxonomy = taxonomy_get_tree(2); //timeline vocabulary
  //$vid = 2; //timeline vocabulary
  //
  //$query = db_select('taxonomy_term_data', 'taxonomy_term_data');
  //$timeline = $query->fields('taxonomy_term_data',array('tid', 'name', 'description'))//SELECT the fields from field_revision_field_time
  //  ->orderBy('weight', 'DESC')//weight
  //  ->orderBy('tid', 'DESC')//tid
  //  ->condition('vid', $vid)
  //  ->execute();
  //  
  //$timeline_list = array();
  //while($record = $timeline->fetchAssoc()){
  //  $timeline_list[] = $record;
  //}
  
  $timeline_content = '<div class="timeline-contents-container"></div>';
  
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $timeline_content,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmc_timeline_js_content.js' => array (
            'type' => 'file',
            'scope' => 'footer',
          ),
          //array('data' => array('mark_malaysiancup_blocks' => $timeline_list), 'type' => 'setting'),
        ),
        'css' => array(
          $module_path . '/css/mmc_timeline_js_content.css',
        ),
      ),
    ),
  );
  
  return $block;
}

function _mmcb_submenu_js_menu($tid, $jsmenu = true){
  //$query = db_select('taxonomy_index', 'taxonomy_index');
  //$query->join('field_revision_field_time', 'field_revision_field_time', 'taxonomy_index.nid=field_revision_field_time.entity_id');
  //$times = $query->fields('field_revision_field_time',array('entity_id', 'field_time_value'))//SELECT the fields from field_revision_field_time
  //  ->orderBy('field_time_value', 'DESC')//ORDER BY created
  //  ->condition('field_revision_field_time.deleted', '0')
  //  ->condition('taxonomy_index.tid', $tid)
  //  ->execute();
  $query = db_select('taxonomy_index', 'taxonomy_index');
  $query->join('field_revision_field_time', 'field_revision_field_time', 'taxonomy_index.nid=field_revision_field_time.entity_id');
  $query->join('node', 'node', 'taxonomy_index.nid=node.nid');
  $query->join('field_data_field_timeline_title', 'field_data_field_timeline_title', 'node.nid=field_data_field_timeline_title.entity_id');
  $times = $query->fields('field_revision_field_time', array('entity_id', 'field_time_value'))//SELECT the fields from field_revision_field_time
    ->fields('node', array('title'))
    ->fields('field_data_field_timeline_title', array('field_timeline_title_value'))
    ->orderBy('field_time_value', 'ASC')//ORDER BY created
    ->condition('node.status', '1')
    ->condition('field_revision_field_time.deleted', '0')
    ->condition('taxonomy_index.tid', $tid)
    ->execute();
  
  $submenu = array();
  while($record = $times->fetchAssoc()){
    $formatted_date = $record['field_time_value'];
    $formatted_date = $formatted_date - (60*60*7.5); //singapore is 7.5?? hmmmm i tried 8 but its not accurate
    $formatted_date = date('g:i A', $formatted_date);
    $formatted_date = $record['field_timeline_title_value'];
    
    if($jsmenu){
      $data = '<a href="#node-' . $record['entity_id'] . '" class="anchorLink">' . $formatted_date . '</a>';
    }else{
      //$data = '<a href="' . url('node/' . $record['entity_id'], array('absolute' => true)) . '">' . $formatted_date . '</a>';
      $data = '<a href="' . url('node/' . $record['entity_id']) . '">' . $formatted_date . '</a>';
    }
    
    $submenu[] = array(
      'data' => $data,
      'id' => 'timeline-list-subitem-' . $record['entity_id'],
      'class' => array('timeline-list-subitem'),
      'data-node' => $record['entity_id'],
    );
  }
  $timeline_menu = theme_item_list(array('items' => $submenu, 'title' => '', 'type' => 'ul', 'attributes' => array('class' => array('js-submenu'))));
  $timeline_menu = '<div class="mmc-block-timeline-js-submenu clearfix">' . $timeline_menu . '</div>';
  return $timeline_menu;
}

function _mmcb_main_js_menu($jsmenu = true){
  //$taxonomy = taxonomy_get_tree(2); //timeline vocabulary
  $vid = 2; //timeline vocabulary
  
  $query = db_select('taxonomy_term_data', 'taxonomy_term_data');
  $query->join('field_data_field_date_time', 'field_data_field_date_time', 'taxonomy_term_data.tid=field_data_field_date_time.entity_id');
  $timeline = $query->fields('taxonomy_term_data',array('tid', 'name', 'description'))//SELECT the fields from field_revision_field_time
    ->orderBy('field_date_time_value', 'ASC')//weight
    ->orderBy('tid', 'ASC')//tid
    ->condition('vid', $vid)
    ->execute();
  
  $timeline_list = array();
  while($record = $timeline->fetchAssoc()){
    $submenu = _mmcb_submenu_js_menu($record['tid'], $jsmenu);
    
    $query = db_select('taxonomy_index', 'taxonomy_index');
    $query->join('field_revision_field_time', 'field_revision_field_time', 'taxonomy_index.nid=field_revision_field_time.entity_id');
    $times = $query->fields('field_revision_field_time',array('entity_id', 'field_time_value'))//SELECT the fields from field_revision_field_time
      ->orderBy('field_time_value', 'ASC')//ORDER BY created
      ->condition('field_revision_field_time.deleted', '0')
      ->condition('taxonomy_index.tid', $record['tid'])
      ->range(0,1)
      ->execute()
      ->fetchObject();
    $data = '';
    if($jsmenu){
      $data = '<a href="#node-' . $times->entity_id . '" class="anchorLink">' . $record['name'] . '</a>';
    }else{
      if($times)
        //$data = '<a href="' . url('node/' . $times->entity_id, array('absolute' => true)) . '">' . $record['name'] . '</a>';
        $data = '<a href="' . url('node/' . $times->entity_id) . '">' . $record['name'] . '</a>';
    }
    $data .= $submenu;
    
    if($data !== '<div class="mmc-block-timeline-js-submenu clearfix"><div class="item-list"></div></div>'){
      $timeline_list[] = array(
        'data' => $data,
        'id' => 'timeline-list-item-' . $record['tid'],
        'class' => array('timeline-list-item'),
        'data-group' => $record['tid'],
      );
    }
  }
  
  $timeline_menu = theme_item_list(array('items' => $timeline_list, 'title' => '', 'type' => 'ul', 'attributes' => array('class' => array('js-menu'))));
  $timeline_menu = '<div class="mmc-block-timeline-js-menu clearfix"><a href="#" class="menu-button menu-left-button"></a><span class="menu-active-line"></span><div class="block-timeline-js-menu-wrapper">' . $timeline_menu . '</div><a href="#" class="menu-button menu-right-button"></a></div>';
 
 
  $module_path = drupal_get_path('module', 'mark_malaysiancup_blocks');
  // Block output in HTML with div wrapper
  $block = array(
    'message' => array(
      '#type' => 'markup',
      '#markup' => $timeline_menu,
      '#attached' => array(
        'js' => array(
          $module_path . '/js/mmc_timeline_js_menu.js' => array (
            'type' => 'file',
            'scope' => 'footer',
          ),
          $module_path . '/js/jquery.sticky.js' => array(
            'type' => 'file',
            'scope' => 'footer',
          )
        ),
        'css' => array(
          $module_path . '/css/mmc_timeline_js_menu.css',
        ),
      ),
    ),
  );
 
  return $block;
}